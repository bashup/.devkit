#!/usr/bin/env bash

jq-tty() { if isatty; then tty pager -- command jq  -C "$@"; else command jq "$@"; fi; }

colorize-json()  { tty-tool       JSON_COLOR jq -C . || tty-pygmentize JSON_COLOR json; }
colorize-yaml()  { tty-pygmentize YAML_COLOR yaml; }
colorize-ini()   { tty-pygmentize INI_COLOR  ini; }
colorize-toml()  { tty-pygmentize TOML_COLOR ini; }
colorize-php()   { tty-pygmentize PHP_COLOR  php; }
tty-pygmentize() { tty-tool "$1" pygmentize -f 256 -O style=igor -l "$2"; }

pager() { set -- "${tty_prefix-DEVKIT_}IS_PAGING"; [[ ! ${!1-} ]] && tty-tool PAGER less -FRX; }

pager.screenfull() { require-any tput; head -n $(( $(tput lines) - ${1-2} )); }
pager.watch()      { clear; date; echo; pager.screenfull 4; }

diffcolor() { tty-tool COLORDIFF colordiff || tty-tool COLORDIFF pygmentize -l diff; }

tty-tool() {
	isatty || return; set -- "${tty_prefix-DEVKIT_}$@"; REPLY=${!1-};
	if [[ ! ${!1+_} ]] && command -v "$2" >/dev/null; then
		event quote command "${@:2}"
	else [[ $REPLY ]];
	fi
}

isatty() {
	local t=${tty_prefix-DEVKIT_}ISATTY
	if [[ ${!t+_} ]]; then
		case "${!t-}" in 0|"") false ;; ?*) true ;; esac
	else [[ -t 1 ]]
	fi
}

tty() {
	local pipe=
	while (($#)) && [[ $1 != -- ]]; do
		! $1 || pipe="| $REPLY$pipe"; shift
	done
	event quote "${@:2}"
	eval "$REPLY $pipe"
}

with-pager() {
	! isatty || set -- "${tty_prefix-DEVKIT_}ISATTY=1" "$@"
	tty pager -- "${tty_prefix-DEVKIT_}PAGER=cat" "PAGER=cat" "${tty_prefix-DEVKIT_}IS_PAGING=yes" "$@"
}
